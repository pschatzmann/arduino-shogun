/**
 * @file shogun.h"
 * @author Phil Schatzmann
 * @brief Basic include so that Arduino can find the starting point
 * @version 0.1
 * @date 2022-05-31
 * 
 * @copyright Copyright (c) 2022
 * 
 */
#pragma once
// install https://github.com/vancegroup/EigenArduino
//#include <Eigen30.h>
#include <shogun/lib/common.h>
#include <shogun/base/class_list.h>
#include <string.h>

#include <shogun/classifier/AveragedPerceptron.h>
#include <shogun/classifier/GaussianProcessClassification.h>
#include <shogun/classifier/LDA.h>
#include <shogun/classifier/NearestCentroid.h>
#include <shogun/classifier/Perceptron.h>
#include <shogun/classifier/PluginEstimate.h>
#include <shogun/classifier/mkl/MKLClassification.h>
#include <shogun/classifier/mkl/MKLMulticlass.h>
#include <shogun/classifier/mkl/MKLMulticlassGLPK.h>
#include <shogun/classifier/mkl/MKLMulticlassGradient.h>
#include <shogun/classifier/mkl/MKLMulticlassOptimizationBase.h>
#include <shogun/classifier/mkl/MKLOneClass.h>
#include <shogun/classifier/svm/GNPPLib.h>
#include <shogun/classifier/svm/GNPPSVM.h>
#include <shogun/classifier/svm/LibLinear.h>
#include <shogun/classifier/svm/LibSVM.h>
#include <shogun/classifier/svm/LibSVMOneClass.h>
#include <shogun/classifier/svm/MPDSVM.h>
#include <shogun/classifier/svm/NewtonSVM.h>
#include <shogun/classifier/svm/OnlineLibLinear.h>
#include <shogun/classifier/svm/OnlineSVMSGD.h>
#include <shogun/classifier/svm/SGDQN.h>
#include <shogun/classifier/svm/SVM.h>
#include <shogun/classifier/svm/SVMOcas.h>
#include <shogun/classifier/svm/WDSVMOcas.h>
#include <shogun/clustering/GMM.h>
#include <shogun/clustering/Hierarchical.h>
#include <shogun/clustering/KMeans.h>
#include <shogun/clustering/KMeansBase.h>
#include <shogun/clustering/KMeansMiniBatch.h>
#include <shogun/converter/DiffusionMaps.h>
#include <shogun/converter/FactorAnalysis.h>
#include <shogun/converter/HashedDocConverter.h>
#include <shogun/converter/HessianLocallyLinearEmbedding.h>
#include <shogun/converter/Isomap.h>
#include <shogun/converter/KernelLocallyLinearEmbedding.h>
#include <shogun/converter/LaplacianEigenmaps.h>
#include <shogun/converter/LinearLocalTangentSpaceAlignment.h>
#include <shogun/converter/LocalTangentSpaceAlignment.h>
#include <shogun/converter/LocalityPreservingProjections.h>
#include <shogun/converter/LocallyLinearEmbedding.h>
#include <shogun/converter/ManifoldSculpting.h>
#include <shogun/converter/MultidimensionalScaling.h>
#include <shogun/converter/NeighborhoodPreservingEmbedding.h>
#include <shogun/converter/StochasticProximityEmbedding.h>
#include <shogun/converter/TDistributedStochasticNeighborEmbedding.h>
#include <shogun/converter/ica/FFSep.h>
#include <shogun/converter/ica/FastICA.h>
#include <shogun/converter/ica/Jade.h>
#include <shogun/converter/ica/JediSep.h>
#include <shogun/converter/ica/SOBI.h>
#include <shogun/converter/ica/UWedgeSep.h>
#include <shogun/distance/AttenuatedEuclideanDistance.h>
#include <shogun/distance/BrayCurtisDistance.h>
#include <shogun/distance/CanberraMetric.h>
#include <shogun/distance/CanberraWordDistance.h>
#include <shogun/distance/ChebyshewMetric.h>
#include <shogun/distance/ChiSquareDistance.h>
#include <shogun/distance/CosineDistance.h>
#include <shogun/distance/CustomDistance.h>
#include <shogun/distance/CustomMahalanobisDistance.h>
#include <shogun/distance/EuclideanDistance.h>
#include <shogun/distance/GeodesicMetric.h>
#include <shogun/distance/HammingWordDistance.h>
#include <shogun/distance/JensenMetric.h>
#include <shogun/distance/KernelDistance.h>
#include <shogun/distance/LevenshteinDistance.h>
#include <shogun/distance/MahalanobisDistance.h>
#include <shogun/distance/ManhattanMetric.h>
#include <shogun/distance/ManhattanWordDistance.h>
#include <shogun/distance/MinkowskiMetric.h>
#include <shogun/distance/SparseEuclideanDistance.h>
#include <shogun/distance/TanimotoDistance.h>
#include <shogun/distributions/EMMixtureModel.h>
#include <shogun/distributions/Gaussian.h>
#include <shogun/distributions/HMM.h>
#include <shogun/distributions/Histogram.h>
#include <shogun/distributions/KernelDensity.h>
#include <shogun/distributions/LinearHMM.h>
#include <shogun/distributions/MixtureModel.h>
#include <shogun/distributions/PositionalPWM.h>
#include <shogun/distributions/classical/GaussianDistribution.h>
#include <shogun/ensemble/MajorityVote.h>
#include <shogun/ensemble/MeanRule.h>
#include <shogun/ensemble/WeightedMajorityVote.h>
#include <shogun/evaluation/ClusteringAccuracy.h>
#include <shogun/evaluation/ClusteringMutualInformation.h>
#include <shogun/evaluation/ContingencyTableEvaluation.h>
#include <shogun/evaluation/CrossValidation.h>
#include <shogun/evaluation/CrossValidationSplitting.h>
#include <shogun/evaluation/CrossValidationStorage.h>
#include <shogun/evaluation/GradientCriterion.h>
#include <shogun/evaluation/GradientEvaluation.h>
#include <shogun/evaluation/GradientResult.h>
#include <shogun/evaluation/LOOCrossValidationSplitting.h>
#include <shogun/evaluation/MeanAbsoluteError.h>
#include <shogun/evaluation/MeanSquaredError.h>
#include <shogun/evaluation/MeanSquaredLogError.h>
#include <shogun/evaluation/MulticlassAccuracy.h>
#include <shogun/evaluation/MulticlassOVREvaluation.h>
#include <shogun/evaluation/MultilabelAccuracy.h>
#include <shogun/evaluation/PRCEvaluation.h>
#include <shogun/evaluation/ROCEvaluation.h>
#include <shogun/evaluation/SigmoidCalibration.h>
#include <shogun/evaluation/StratifiedCrossValidationSplitting.h>
#include <shogun/evaluation/StructuredAccuracy.h>
#include <shogun/evaluation/TimeSeriesSplitting.h>
#include <shogun/features/Alphabet.h>
#include <shogun/features/BinnedDotFeatures.h>
#include <shogun/features/CombinedDotFeatures.h>
#include <shogun/features/CombinedFeatures.h>
#include <shogun/features/DataGenerator.h>
#include <shogun/features/DummyFeatures.h>
#include <shogun/features/ExplicitSpecFeatures.h>
#include <shogun/features/FKFeatures.h>
#include <shogun/features/FactorGraphFeatures.h>
#include <shogun/features/ImplicitWeightedSpecFeatures.h>
#include <shogun/features/IndexFeatures.h>
#include <shogun/features/LBPPyrDotFeatures.h>
#include <shogun/features/LatentFeatures.h>
#include <shogun/features/PolyFeatures.h>
#include <shogun/features/RandomFourierDotFeatures.h>
#include <shogun/features/RealFileFeatures.h>
#include <shogun/features/SNPFeatures.h>
#include <shogun/features/SparsePolyFeatures.h>
#include <shogun/features/Subset.h>
#include <shogun/features/SubsetStack.h>
#include <shogun/features/TOPFeatures.h>
#include <shogun/features/WDFeatures.h>
#include <shogun/features/hashed/HashedDocDotFeatures.h>
#include <shogun/features/hashed/HashedWDFeatures.h>
#include <shogun/features/hashed/HashedWDFeaturesTransposed.h>
#include <shogun/features/streaming/StreamingHashedDocDotFeatures.h>
#include <shogun/features/streaming/generators/GaussianBlobsDataGenerator.h>
#include <shogun/features/streaming/generators/MeanShiftDataGenerator.h>
#include <shogun/io/BinaryFile.h>
#include <shogun/io/CSVFile.h>
#include <shogun/io/File.h>
#include <shogun/io/IOBuffer.h>
#include <shogun/io/LibSVMFile.h>
#include <shogun/io/LineReader.h>
#include <shogun/io/Parser.h>
#include <shogun/io/ProtobufFile.h>
#include <shogun/io/UAIFile.h>
#include <shogun/io/serialization/BitseryDeserializer.h>
#include <shogun/io/serialization/BitserySerializer.h>
#include <shogun/io/serialization/JsonDeserializer.h>
#include <shogun/io/serialization/JsonSerializer.h>
#include <shogun/io/streaming/StreamingAsciiFile.h>
#include <shogun/io/streaming/StreamingFile.h>
#include <shogun/io/streaming/StreamingFileFromFeatures.h>
#include <shogun/kernel/ANOVAKernel.h>
#include <shogun/kernel/AUCKernel.h>
#include <shogun/kernel/BesselKernel.h>
#include <shogun/kernel/CauchyKernel.h>
#include <shogun/kernel/Chi2Kernel.h>
#include <shogun/kernel/CircularKernel.h>
#include <shogun/kernel/CombinedKernel.h>
#include <shogun/kernel/ConstKernel.h>
#include <shogun/kernel/CustomKernel.h>
#include <shogun/kernel/DiagKernel.h>
#include <shogun/kernel/DistanceKernel.h>
#include <shogun/kernel/ExponentialKernel.h>
#include <shogun/kernel/GaussianARDKernel.h>
#include <shogun/kernel/GaussianCompactKernel.h>
#include <shogun/kernel/GaussianKernel.h>
#include <shogun/kernel/GaussianShiftKernel.h>
#include <shogun/kernel/GaussianShortRealKernel.h>
#include <shogun/kernel/HistogramIntersectionKernel.h>
#include <shogun/kernel/InverseMultiQuadricKernel.h>
#include <shogun/kernel/JensenShannonKernel.h>
#include <shogun/kernel/LinearKernel.h>
#include <shogun/kernel/LogKernel.h>
#include <shogun/kernel/MaternKernel.h>
#include <shogun/kernel/MultiquadricKernel.h>
#include <shogun/kernel/PeriodicKernel.h>
#include <shogun/kernel/PolyKernel.h>
#include <shogun/kernel/PowerKernel.h>
#include <shogun/kernel/ProductKernel.h>
#include <shogun/kernel/PyramidChi2.h>
#include <shogun/kernel/RationalQuadraticKernel.h>
#include <shogun/kernel/SigmoidKernel.h>
#include <shogun/kernel/SphericalKernel.h>
#include <shogun/kernel/SplineKernel.h>
#include <shogun/kernel/TStudentKernel.h>
#include <shogun/kernel/TensorProductPairKernel.h>
#include <shogun/kernel/WaveKernel.h>
#include <shogun/kernel/WaveletKernel.h>
#include <shogun/kernel/WeightedDegreeRBFKernel.h>
#include <shogun/kernel/normalizer/AvgDiagKernelNormalizer.h>
#include <shogun/kernel/normalizer/DiceKernelNormalizer.h>
#include <shogun/kernel/normalizer/FirstElementKernelNormalizer.h>
#include <shogun/kernel/normalizer/IdentityKernelNormalizer.h>
#include <shogun/kernel/normalizer/RidgeKernelNormalizer.h>
#include <shogun/kernel/normalizer/ScatterKernelNormalizer.h>
#include <shogun/kernel/normalizer/SqrtDiagKernelNormalizer.h>
#include <shogun/kernel/normalizer/TanimotoKernelNormalizer.h>
#include <shogun/kernel/normalizer/VarianceKernelNormalizer.h>
#include <shogun/kernel/normalizer/ZeroMeanCenterKernelNormalizer.h>
#include <shogun/kernel/string/CommUlongStringKernel.h>
#include <shogun/kernel/string/CommWordStringKernel.h>
#include <shogun/kernel/string/FixedDegreeStringKernel.h>
#include <shogun/kernel/string/GaussianMatchStringKernel.h>
#include <shogun/kernel/string/HistogramWordStringKernel.h>
#include <shogun/kernel/string/LinearStringKernel.h>
#include <shogun/kernel/string/LocalAlignmentStringKernel.h>
#include <shogun/kernel/string/LocalityImprovedStringKernel.h>
#include <shogun/kernel/string/MatchWordStringKernel.h>
#include <shogun/kernel/string/OligoStringKernel.h>
#include <shogun/kernel/string/PolyMatchStringKernel.h>
#include <shogun/kernel/string/PolyMatchWordStringKernel.h>
#include <shogun/kernel/string/RegulatoryModulesStringKernel.h>
#include <shogun/kernel/string/SNPStringKernel.h>
#include <shogun/kernel/string/SalzbergWordStringKernel.h>
#include <shogun/kernel/string/SimpleLocalityImprovedStringKernel.h>
#include <shogun/kernel/string/SparseSpatialSampleStringKernel.h>
#include <shogun/kernel/string/SpectrumMismatchRBFKernel.h>
#include <shogun/kernel/string/SpectrumRBFKernel.h>
#include <shogun/kernel/string/SubsequenceStringKernel.h>
#include <shogun/kernel/string/WeightedCommWordStringKernel.h>
#include <shogun/kernel/string/WeightedDegreePositionStringKernel.h>
#include <shogun/kernel/string/WeightedDegreeStringKernel.h>
#include <shogun/labels/BinaryLabelEncoder.h>
#include <shogun/labels/BinaryLabels.h>
#include <shogun/labels/FactorGraphLabels.h>
#include <shogun/labels/LatentLabels.h>
#include <shogun/labels/MulticlassLabels.h>
#include <shogun/labels/MulticlassLabelsEncoder.h>
#include <shogun/labels/MultilabelLabels.h>
#include <shogun/labels/RegressionLabelEncoder.h>
#include <shogun/labels/RegressionLabels.h>
#include <shogun/labels/StructuredLabels.h>
#include <shogun/latent/LatentSVM.h>
#include <shogun/lib/BitString.h>
#include <shogun/lib/CircularBuffer.h>
#include <shogun/lib/Compressor.h>
#include <shogun/lib/Data.h>
#include <shogun/lib/DelimiterTokenizer.h>
#include <shogun/lib/DynamicObjectArray.h>
#include <shogun/lib/Hash.h>
#include <shogun/lib/IndexBlock.h>
#include <shogun/lib/IndexBlockGroup.h>
#include <shogun/lib/IndexBlockTree.h>
#include <shogun/lib/NGramTokenizer.h>
#include <shogun/lib/StoppableSGObject.h>
#include <shogun/lib/StructuredData.h>
#include <shogun/lib/Time.h>
#include <shogun/lib/observers/ParameterObserverCV.h>
#include <shogun/lib/observers/ParameterObserverLogger.h>
#include <shogun/loss/AbsoluteDeviationLoss.h>
#include <shogun/loss/ExponentialLoss.h>
#include <shogun/loss/HingeLoss.h>
#include <shogun/loss/HuberLoss.h>
#include <shogun/loss/LogLoss.h>
#include <shogun/loss/LogLossMargin.h>
#include <shogun/loss/SmoothHingeLoss.h>
#include <shogun/loss/SquaredHingeLoss.h>
#include <shogun/loss/SquaredLoss.h>
#include <shogun/machine/BaggingMachine.h>
#include <shogun/machine/BaseMulticlassMachine.h>
#include <shogun/machine/Composite.h>
#include <shogun/machine/DistanceMachine.h>
#include <shogun/machine/EnsembleMachine.h>
#include <shogun/machine/GLM.h>
#include <shogun/machine/GaussianProcess.h>
#include <shogun/machine/KernelMachine.h>
#include <shogun/machine/KernelMulticlassMachine.h>
#include <shogun/machine/KernelStructuredOutputMachine.h>
#include <shogun/machine/LinearMachine.h>
#include <shogun/machine/LinearMulticlassMachine.h>
#include <shogun/machine/LinearStructuredOutputMachine.h>
#include <shogun/machine/Machine.h>
#include <shogun/machine/NativeMulticlassMachine.h>
#include <shogun/machine/OnlineLinearMachine.h>
#include <shogun/machine/Pipeline.h>
#include <shogun/machine/RandomForest.h>
#include <shogun/machine/StochasticGBMachine.h>
#include <shogun/machine/StructuredOutputMachine.h>
#include <shogun/machine/gp/ConstMean.h>
#include <shogun/machine/gp/EPInferenceMethod.h>
#include <shogun/machine/gp/ExactInferenceMethod.h>
#include <shogun/machine/gp/FITCInferenceMethod.h>
#include <shogun/machine/gp/GaussianARDSparseKernel.h>
#include <shogun/machine/gp/GaussianLikelihood.h>
#include <shogun/machine/gp/KLCholeskyInferenceMethod.h>
#include <shogun/machine/gp/KLCovarianceInferenceMethod.h>
#include <shogun/machine/gp/KLDiagonalInferenceMethod.h>
#include <shogun/machine/gp/KLDualInferenceMethod.h>
#include <shogun/machine/gp/LogitDVGLikelihood.h>
#include <shogun/machine/gp/LogitLikelihood.h>
#include <shogun/machine/gp/LogitVGLikelihood.h>
#include <shogun/machine/gp/LogitVGPiecewiseBoundLikelihood.h>
#include <shogun/machine/gp/MultiLaplaceInferenceMethod.h>
#include <shogun/machine/gp/ProbitLikelihood.h>
#include <shogun/machine/gp/ProbitVGLikelihood.h>
#include <shogun/machine/gp/SingleFITCLaplaceInferenceMethod.h>
#include <shogun/machine/gp/SingleLaplaceInferenceMethod.h>
#include <shogun/machine/gp/SoftMaxLikelihood.h>
#include <shogun/machine/gp/StudentsTLikelihood.h>
#include <shogun/machine/gp/StudentsTVGLikelihood.h>
#include <shogun/machine/gp/VarDTCInferenceMethod.h>
#include <shogun/machine/gp/ZeroMean.h>
#include <shogun/mathematics/Math.h>
#include <shogun/mathematics/Statistics.h>
#include <shogun/mathematics/ajd/FFDiag.h>
#include <shogun/mathematics/ajd/JADiag.h>
#include <shogun/mathematics/ajd/JADiagOrth.h>
#include <shogun/mathematics/ajd/JediDiag.h>
#include <shogun/mathematics/ajd/QDiag.h>
#include <shogun/mathematics/ajd/UWedge.h>
#include <shogun/mathematics/linalg/eigsolver/DirectEigenSolver.h>
#include <shogun/mathematics/linalg/eigsolver/LanczosEigenSolver.h>
#include <shogun/mathematics/linalg/linsolver/ConjugateGradientSolver.h>
#include <shogun/mathematics/linalg/linsolver/DirectLinearSolverComplex.h>
#include <shogun/mathematics/linalg/linsolver/DirectSparseLinearSolver.h>
#include <shogun/mathematics/linalg/ratapprox/logdet/LogDetEstimator.h>
#include <shogun/mathematics/linalg/ratapprox/logdet/opfunc/DenseMatrixExactLog.h>
#include <shogun/mathematics/linalg/ratapprox/logdet/opfunc/LogRationalApproximationCGM.h>
#include <shogun/mathematics/linalg/ratapprox/logdet/opfunc/LogRationalApproximationIndividual.h>
#include <shogun/mathematics/linalg/ratapprox/tracesampler/NormalSampler.h>
#include <shogun/metric/LMNN.h>
#include <shogun/multiclass/BruteKNNSolver.h>
#include <shogun/multiclass/GMNPLib.h>
#include <shogun/multiclass/GMNPSVM.h>
#include <shogun/multiclass/GaussianNaiveBayes.h>
#include <shogun/multiclass/KNN.h>
#include <shogun/multiclass/LSHKNNSolver.h>
#include <shogun/multiclass/MCLDA.h>
#include <shogun/multiclass/MulticlassLibLinear.h>
#include <shogun/multiclass/MulticlassLibSVM.h>
#include <shogun/multiclass/MulticlassOCAS.h>
#include <shogun/multiclass/MulticlassOneVsOneStrategy.h>
#include <shogun/multiclass/MulticlassOneVsRestStrategy.h>
#include <shogun/multiclass/MulticlassSVM.h>
#include <shogun/multiclass/QDA.h>
#include <shogun/multiclass/ScatterSVM.h>
#include <shogun/multiclass/ShareBoost.h>
#include <shogun/multiclass/ecoc/ECOCAEDDecoder.h>
#include <shogun/multiclass/ecoc/ECOCDiscriminantEncoder.h>
#include <shogun/multiclass/ecoc/ECOCEDDecoder.h>
#include <shogun/multiclass/ecoc/ECOCForestEncoder.h>
#include <shogun/multiclass/ecoc/ECOCHDDecoder.h>
#include <shogun/multiclass/ecoc/ECOCIHDDecoder.h>
#include <shogun/multiclass/ecoc/ECOCLLBDecoder.h>
#include <shogun/multiclass/ecoc/ECOCOVOEncoder.h>
#include <shogun/multiclass/ecoc/ECOCOVREncoder.h>
#include <shogun/multiclass/ecoc/ECOCRandomDenseEncoder.h>
#include <shogun/multiclass/ecoc/ECOCRandomSparseEncoder.h>
#include <shogun/multiclass/ecoc/ECOCStrategy.h>
#include <shogun/multiclass/tree/BalancedConditionalProbabilityTree.h>
#include <shogun/multiclass/tree/BallTree.h>
#include <shogun/multiclass/tree/C45ClassifierTree.h>
#include <shogun/multiclass/tree/CARTree.h>
#include <shogun/multiclass/tree/CHAIDTree.h>
#include <shogun/multiclass/tree/ID3ClassifierTree.h>
#include <shogun/multiclass/tree/KDTree.h>
#include <shogun/multiclass/tree/RandomCARTree.h>
#include <shogun/multiclass/tree/RandomConditionalProbabilityTree.h>
#include <shogun/multiclass/tree/RelaxedTree.h>
#include <shogun/neuralnets/Autoencoder.h>
#include <shogun/neuralnets/DeepAutoencoder.h>
#include <shogun/neuralnets/DeepBeliefNetwork.h>
#include <shogun/neuralnets/NeuralConvolutionalLayer.h>
#include <shogun/neuralnets/NeuralInputLayer.h>
#include <shogun/neuralnets/NeuralLayer.h>
#include <shogun/neuralnets/NeuralLayers.h>
#include <shogun/neuralnets/NeuralLeakyRectifiedLinearLayer.h>
#include <shogun/neuralnets/NeuralLinearLayer.h>
#include <shogun/neuralnets/NeuralLogisticLayer.h>
#include <shogun/neuralnets/NeuralNetwork.h>
#include <shogun/neuralnets/NeuralRectifiedLinearLayer.h>
#include <shogun/neuralnets/NeuralSoftmaxLayer.h>
#include <shogun/neuralnets/RBM.h>
#include <shogun/optimization/AdaDeltaUpdater.h>
#include <shogun/optimization/AdaGradUpdater.h>
#include <shogun/optimization/AdamUpdater.h>
#include <shogun/optimization/AdaptMomentumCorrection.h>
#include <shogun/optimization/ConstLearningRate.h>
#include <shogun/optimization/ElasticNetPenalty.h>
#include <shogun/optimization/GradientDescendUpdater.h>
#include <shogun/optimization/InverseScalingLearningRate.h>
#include <shogun/optimization/L1Penalty.h>
#include <shogun/optimization/L1PenaltyForTG.h>
#include <shogun/optimization/L2Penalty.h>
#include <shogun/optimization/NesterovMomentumCorrection.h>
#include <shogun/optimization/PNormMappingFunction.h>
#include <shogun/optimization/RmsPropUpdater.h>
#include <shogun/optimization/SGDMinimizer.h>
#include <shogun/optimization/SMDMinimizer.h>
#include <shogun/optimization/SMIDASMinimizer.h>
#include <shogun/optimization/SVRGMinimizer.h>
#include <shogun/optimization/StandardMomentumCorrection.h>
#include <shogun/optimization/lbfgs/LBFGSMinimizer.h>
#include <shogun/preprocessor/FisherLDA.h>
#include <shogun/preprocessor/HomogeneousKernelMap.h>
#include <shogun/preprocessor/KernelPCA.h>
#include <shogun/preprocessor/LogPlusOne.h>
#include <shogun/preprocessor/NormOne.h>
#include <shogun/preprocessor/PCA.h>
#include <shogun/preprocessor/PNorm.h>
#include <shogun/preprocessor/PruneVarSubMean.h>
#include <shogun/preprocessor/RFFPreprocessor.h>
#include <shogun/preprocessor/RescaleFeatures.h>
#include <shogun/preprocessor/SortUlongString.h>
#include <shogun/preprocessor/SortWordString.h>
#include <shogun/preprocessor/SumOne.h>
#include <shogun/regression/GaussianProcessRegression.h>
#include <shogun/regression/KRRNystrom.h>
#include <shogun/regression/KernelRidgeRegression.h>
#include <shogun/regression/LeastAngleRegression.h>
#include <shogun/regression/LeastSquaresRegression.h>
#include <shogun/regression/LinearRidgeRegression.h>
#include <shogun/regression/svr/LibLinearRegression.h>
#include <shogun/regression/svr/LibSVR.h>
#include <shogun/regression/svr/MKLRegression.h>
#include <shogun/statistical_testing/BTestMMD.h>
#include <shogun/statistical_testing/LinearTimeMMD.h>
#include <shogun/statistical_testing/MultiKernelQuadraticTimeMMD.h>
#include <shogun/statistical_testing/QuadraticTimeMMD.h>
#include <shogun/statistical_testing/kernelselection/KernelSelectionStrategy.h>
#include <shogun/structure/CCSOSVM.h>
#include <shogun/structure/DisjointSet.h>
#include <shogun/structure/DynProg.h>
#include <shogun/structure/FWSOSVM.h>
#include <shogun/structure/Factor.h>
#include <shogun/structure/FactorGraph.h>
#include <shogun/structure/FactorGraphDataGenerator.h>
#include <shogun/structure/FactorGraphModel.h>
#include <shogun/structure/FactorType.h>
#include <shogun/structure/GEMPLP.h>
#include <shogun/structure/GraphCut.h>
#include <shogun/structure/HMSVMModel.h>
#include <shogun/structure/HashedMultilabelModel.h>
#include <shogun/structure/HierarchicalMultilabelModel.h>
#include <shogun/structure/IntronList.h>
#include <shogun/structure/MAPInference.h>
#include <shogun/structure/MulticlassModel.h>
#include <shogun/structure/MulticlassSOLabels.h>
#include <shogun/structure/MultilabelCLRModel.h>
#include <shogun/structure/MultilabelModel.h>
#include <shogun/structure/MultilabelSOLabels.h>
#include <shogun/structure/Plif.h>
#include <shogun/structure/PlifArray.h>
#include <shogun/structure/PlifMatrix.h>
#include <shogun/structure/SOSVMHelper.h>
#include <shogun/structure/SegmentLoss.h>
#include <shogun/structure/SequenceLabels.h>
#include <shogun/structure/StochasticSOSVM.h>
#include <shogun/structure/TwoStateModel.h>
#include <shogun/transfer/domain_adaptation/DomainAdaptationMulticlassLibLinear.h>
#include <shogun/transfer/domain_adaptation/DomainAdaptationSVMLinear.h>
#include <shogun/transfer/multitask/LibLinearMTL.h>
#include <shogun/transfer/multitask/MultitaskKernelMaskNormalizer.h>
#include <shogun/transfer/multitask/MultitaskKernelMaskPairNormalizer.h>
#include <shogun/transfer/multitask/MultitaskKernelNormalizer.h>
#include <shogun/transfer/multitask/MultitaskKernelPlifNormalizer.h>
#include <shogun/transfer/multitask/MultitaskKernelTreeNormalizer.h>
#include <shogun/transfer/multitask/MultitaskROCEvaluation.h>
#include <shogun/transfer/multitask/Task.h>
#include <shogun/transfer/multitask/TaskGroup.h>
#include <shogun/transfer/multitask/TaskTree.h>
#include <shogun/features/DenseFeatures.h>
#include <shogun/features/DenseSubSamplesFeatures.h>
#include <shogun/features/DenseSubsetFeatures.h>
#include <shogun/features/MatrixFeatures.h>
#include <shogun/features/SparseFeatures.h>
#include <shogun/features/StringFeatures.h>
#include <shogun/features/StringFileFeatures.h>
#include <shogun/features/hashed/HashedDenseFeatures.h>
#include <shogun/features/hashed/HashedSparseFeatures.h>
#include <shogun/features/streaming/StreamingDenseFeatures.h>
#include <shogun/features/streaming/StreamingHashedDenseFeatures.h>
#include <shogun/features/streaming/StreamingHashedSparseFeatures.h>
#include <shogun/features/streaming/StreamingSparseFeatures.h>
#include <shogun/features/streaming/StreamingStringFeatures.h>
#include <shogun/io/BinaryStream.h>
#include <shogun/io/MemoryMappedFile.h>
#include <shogun/io/Serializable.h>
#include <shogun/io/SimpleFile.h>
#include <shogun/io/streaming/ParseBuffer.h>
#include <shogun/io/streaming/StreamingFileFromDenseFeatures.h>
#include <shogun/io/streaming/StreamingFileFromSparseFeatures.h>
#include <shogun/io/streaming/StreamingFileFromStringFeatures.h>
#include <shogun/lib/Cache.h>
#include <shogun/lib/DynamicArray.h>
#include <shogun/multiclass/tree/TreeMachine.h>
#include <shogun/preprocessor/DecompressString.h>
#include <shogun/mathematics/linalg/linop/DenseMatrixOperator.h>
#include <shogun/mathematics/linalg/linop/SparseMatrixOperator.h>